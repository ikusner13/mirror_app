{"version":3,"sources":["components/Clock.js","config.js","components/Date.js","components/Dogs.js","components/CurrentWeather.js","jsons/weather-day-icons.js","jsons/weather-nigh-icons.js","components/Spotify-playing.js","components/Spotify.js","jsons/messages.js","components/Message.js","App.js","serviceWorker.js","index.js"],"names":["Clock","useState","minute","setMinute","second","setSecond","hour","setHour","periods","setPeriods","useEffect","time","moment","format","setTimeout","className","calculateTimeTil","now","Date","timeTil","getFullYear","getMonth","getDate","times","timesTil","map","Math","min","CurrentDate","currentDate","setCurrentDate","date","timeToTwelve","helper","dog_url","Dog","imgSource","setImgSource","fetchData","a","fetch","res","json","img_uri","message","src","alt","width","height","defaults","updateTime","ZIP","api_key","day","night","api_uri","CurrentWeather","condition","setCondition","temp","setTemp","icon","setIcon","iconType","setIconType","high","low","highLow","setHighLow","sunSet","setSunSet","getDayorNightIcons","fetch_res","main","weather","description","id","toString","temp_max","temp_min","sys","sunset","Container","fluid","Row","Col","round","unix","Number","SpotifyPlaying","songInfo","imgURL","songTitle","artist","album","socket","io","Spotify","noSong","setSongInfo","on","data","Messages","anyTime","morning","evening","holidays","getHoliday","messages","hasOwnProperty","Message","currentMessage","setCurrentMessage","changeMessage","set","currentSet","length","floor","random","getRandomMessage","App","md","span","offset","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.2683f07d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport moment from 'moment'\n\nconst Clock = () => {\n    const [minute, setMinute] = useState('')\n    const [second, setSecond] = useState('')\n    const [hour, setHour] = useState('')\n    const [periods, setPeriods] = useState('')\n\n    useEffect(() => {\n        const time = () => {\n            setHour(moment().format('hh'))\n            setMinute(moment().format('mm'))\n            setSecond(moment().format('ss'))\n            setPeriods(moment().format('A'))\n            setTimeout(time, 1000)\n        }\n        time()\n    }, [])\n\n    return (\n        <div className=\"display-4 clock-size\">\n            <span className=\"\">{hour}</span>:\n            <span className=\"\">{minute}</span>\n            <span className=\"seconds \">{second}</span>\n            <span className=\"periods \">{periods}</span>\n        </div>\n    )\n}\n\nexport default Clock","const updateTimes = {\n    weather: 15, //minutes\n    dogFirst: 10, //hour\n    dogSecond: 20, //hour\n}\n\nconst calculateTimeTil = (hour) => {\n    let now = new Date()\n    let timeTil = new Date(now.getFullYear(), now.getMonth(), now.getDate(), hour, 0, 0, 0) - now;\n    if (timeTil < 0) {\n        timeTil += 86400000\n    }\n\n    return timeTil\n}\n\nconst closestRefresh = (...times) => {\n    const timesTil = times.map(hour => {\n        return calculateTimeTil(hour)\n    })\n\n    return (Math.min(...timesTil))\n}\n\n\n\nexport default { updateTimes, calculateTimeTil, closestRefresh }\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment'\nimport helper from '../config'\n\nconst CurrentDate = () => {\n    const [currentDate, setCurrentDate] = useState(moment().format('LL'))\n\n    const date = () => {\n        setCurrentDate(moment().format('dddd, MMMM Do'))\n        let timeToTwelve = helper.calculateTimeTil(0)\n        setTimeout(date, timeToTwelve)\n    }\n    useEffect(() => {\n        date()\n    })\n\n    return (\n        <div className=\"\">\n            {currentDate}\n        </div>\n    )\n\n}\n\nexport default CurrentDate","import React, { useState, useEffect } from 'react';\nimport helper from '../config'\n\nconst dog_url = 'https://dog.ceo/api/breeds/image/random'\n\nconst Dog = () => {\n\n    const [imgSource, setImgSource] = useState('')\n\n    useEffect(() => {\n        async function fetchData() {\n            const res = await fetch(dog_url)\n            const json = await res.json()\n            const img_uri = json.message\n\n            setImgSource(img_uri)\n\n            const time = helper.closestRefresh(10, 22)\n            setTimeout(fetchData, time)\n        }\n        fetchData();\n    }, [])\n\n    if (!imgSource) {\n        return (\n            <div>\n                no image\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className=\"float-right\">\n                <img\n                    src={imgSource}\n                    alt='dog'\n                    width='300'\n                    height='300'\n                ></img>\n            </div>\n        )\n    }\n\n}\n\nexport default Dog","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport 'weather-icons/css/weather-icons.css'\nimport moment from 'moment'\nimport weather_day_icons from '../jsons/weather-day-icons'\nimport weather_night_icons from '../jsons/weather-nigh-icons'\n\nconst defaults = {\n    updateTime: 15 * 60000,\n    ZIP: '44240',\n    api_key: 'b8d8163c79b9574cc193215f73d445c9',\n    day: weather_day_icons,\n    night: weather_night_icons\n}\n\nlet api_uri = `https://api.openweathermap.org/data/2.5/weather?zip=${defaults.ZIP},us&units=imperial&appid=${defaults.api_key}`\n//const api_uri2 = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&units=imperial&appid=${api_key}`\n\nconst updateTime = defaults.updateTime //minutes \n\n\nconst CurrentWeather = () => {\n    const [condition, setCondition] = useState('condition')\n    const [temp, setTemp] = useState('69')\n    const [icon, setIcon] = useState('200')\n    const [iconType, setIconType] = useState(defaults.day)\n    const [highLow, setHighLow] = useState({ high: 0, low: 0 })\n    const [sunSet, setSunSet] = useState(0)\n\n    const getDayorNightIcons = () => {\n        const hour = moment().hour()\n        if (hour >= 22 || (hour >= 0 && hour < 7)) {\n            setIconType(defaults.night)\n        }\n        else {\n            setIconType(defaults.day)\n        }\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const fetch_res = await fetch(api_uri)\n            const json = await fetch_res.json()\n\n            setTemp(json.main.temp)\n\n            setCondition(json.weather[0].description)\n\n            setIcon((json.weather[0].id).toString())\n            setHighLow({ high: json.main.temp_max, low: json.main.temp_min })\n            setSunSet(json.sys.sunset)\n            getDayorNightIcons()\n            setTimeout(fetchData, updateTime)\n        }\n        fetchData()\n    }, [])\n    return (\n        <div className=\"\">\n            <Container fluid={true}>\n                <Row className=\"weather-text\"  >\n                    <Col className=\"text-right weather-col\">\n                        <div className=\"high-low\">\n                            high {Math.round(highLow.high)}&deg; / low {Math.round(highLow.low)}&deg;\n                            <i className=\"wi wi-sunset\" />\n                            {moment.unix(sunSet).format('hh:mm')}\n                        </div>\n                        <div className=\"\">\n                            <i className={`wi ${iconType[icon]} tempDegree`} />\n                            <span className=\"temp tempDegree\">{Math.round(Number(temp))}&deg;</span>\n                            <div className=\"condition\">{condition}</div>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default CurrentWeather","import 'weather-icons/css/weather-icons.css'\n\nconst weather_day_icons = {\n    \"200\": \"wi-day-storm-showers\",\n    \"201\": \"wi-day-storm-showers\",\n    \"202\": \"wi-day-thunderstorm\",\n    \"210\": \"wi-day-thunderstorm\",\n    \"211\": \"wi-day-thunderstorm\",\n    \"212\": \"wi-day-thunderstorm\",\n    \"221\": \"wi-day-thunderstorm\",\n    \"230\": \"wi-day-thunderstorm\",\n    \"231\": \"wi-day-thunderstorm\",\n    \"232\": \"wi-day-thunderstorm\",\n\n    \"300\": \"wi-day-sprinkle\",\n    \"301\": \"wi-day-sprinkle\",\n    \"302\": \"wi-day-showers\",\n    \"310\": \"wi-day-showers\",\n    \"311\": \"wi-day-showers\",\n    \"312\": \"wi-day-showers\",\n    \"313\": \"wi-day-showers\",\n    \"314\": \"wi-day-showers\",\n    \"321\": \"wi-day-showers\",\n\n    \"500\": \"wi-day-showers\",\n    \"501\": \"wi-day-showers\",\n    \"502\": \"wi-day-rain\",\n    \"503\": \"wi-day-rain\",\n    \"504\": \"wi-day-rain\",\n    \"511\": \"wi-day-hail\",\n    \"520\": \"wi-day-rain\",\n    \"521\": \"wi-day-rain\",\n    \"522\": \"wi-day-rain\",\n    \"531\": \"wi-day-rain\",\n\n    \"600\": \"wi-day-snow\",\n    \"601\": \"wi-day-snow\",\n    \"602\": \"wi-day-snow\",\n    \"611\": \"wi-day-sleet\",\n    \"612\": \"wi-day-sleet\",\n    \"613\": \"wi-day-sleet\",\n    \"615\": \"wi-day-rain-mix\",\n    \"616\": \"wi-day-rain-mix\",\n    \"620\": \"wi-day-rain-mix\",\n    \"621\": \"wi-day-rain-mix\",\n    \"622\": \"wi-day-rain-mix\",\n\n    \"701\": \"wi-day-fog\",\n    \"711\": \"wi-day-fog\",\n    \"721\": \"wi-day-haze\",\n    \"731\": \"wi-sandstorm\",\n    \"741\": \"wi-day-fog\",\n    \"751\": \"wi-sandstorm\",\n    \"761\": \"wi-sandstorm\",\n    \"762\": \"wi-sandstorm\",\n    \"771\": \"wi-sandstorm\",\n    \"781\": \"wi-tornado\",\n\n    \"800\": \"wi-day-sunny\",\n    \"801\": \"wi-day-cloudy\",\n    \"802\": \"wi-cloud\",\n    \"803\": \"wi-cloudy\",\n    \"804\": \"wi-cloudy\",\n}\n\nexport default weather_day_icons","import 'weather-icons/css/weather-icons.css'\n\nconst weather_night_icons = {\n    \"200\": \"wi-night-thunderstorm\",\n    \"201\": \"wi-night-storm-showers\",\n    \"202\": \"wi-night-thunderstorm\",\n    \"210\": \"wi-night-thunderstorm\",\n    \"211\": \"wi-night-thunderstorm\",\n    \"212\": \"wi-night-thunderstorm\",\n    \"221\": \"wi-night-thunderstorm\",\n    \"230\": \"wi-night-thunderstorm\",\n    \"231\": \"wi-night-thunderstorm\",\n    \"232\": \"wi-night-thunderstorm\",\n\n    \"300\": \"wi-night-alt-sprinkle\",\n    \"301\": \"wi-night-alt-sprinkle\",\n    \"302\": \"wi-night-showers\",\n    \"310\": \"wi-night-showers\",\n    \"311\": \"wi-night-showers\",\n    \"312\": \"wi-night-showers\",\n    \"313\": \"wi-night-showers\",\n    \"314\": \"wi-night-showers\",\n    \"321\": \"wi-night-showers\",\n\n    \"500\": \"wi-night-showers\",\n    \"501\": \"wi-night-showers\",\n    \"502\": \"wi-night-alt-rain\",\n    \"503\": \"wi-night-alt-rain\",\n    \"504\": \"wi-night-alt-rain\",\n    \"511\": \"wi-night-hail\",\n    \"520\": \"wi-night-alt-rain\",\n    \"521\": \"wi-night-alt-rain\",\n    \"522\": \"wi-night-alt-rain\",\n    \"531\": \"wi-night-alt-rain\",\n\n    \"600\": \"wi-night-snow\",\n    \"601\": \"wi-night-snow\",\n    \"602\": \"wi-night-snow\",\n    \"611\": \"wi-night-alt-sleet\",\n    \"612\": \"wi-night-alt-sleet\",\n    \"613\": \"wi-night-alt-sleet\",\n    \"615\": \"wi-night-rain-mix\",\n    \"616\": \"wi-night-rain-mix\",\n    \"620\": \"wi-night-alt-rain-mix\",\n    \"621\": \"wi-night-alt-rain-mix\",\n    \"622\": \"wi-night-alt-rain-mix\",\n\n    \"701\": \"wi-night-fog\",\n    \"711\": \"wi-night-fog\",\n    \"721\": \"wi-fog\",\n    \"731\": \"wi-sandstorm\",\n    \"741\": \"wi-night-fog\",\n    \"751\": \"wi-sandstorm\",\n    \"761\": \"wi-sandstorm\",\n    \"762\": \"wi-sandstorm\",\n    \"771\": \"wi-sandstorm\",\n    \"781\": \"wi-tornado\",\n\n    \"800\": \"wi-night-clear\",\n    \"801\": \"wi-night-alt-cloudy\",\n    \"802\": \"wi-cloud\",\n    \"803\": \"wi-cloudy\",\n    \"804\": \"wi-cloudy\",\n}\n\nexport default weather_night_icons","import React from 'react'\n\nconst SpotifyPlaying = ({ songInfo }) => {\n    return (\n        <div >\n            <div className=\"songInfo\">\n                <img\n                    src={songInfo.imgURL}\n                    alt=\"album\"\n                    width=\"200\"\n                    height=\"200\"\n                >\n                </img>\n            </div>\n            <div className=\"songInfo below-album-img\">\n                <i className=\"fa fa-music\" />\n                {songInfo.songTitle}\n            </div>\n            <div className=\"songInfo\">\n                <i className=\"fa fa-user\" />\n                {songInfo.artist}\n            </div>\n            <div className=\"songInfo\">\n                <i className=\"fa fa-folder\" />\n                {songInfo.album}\n            </div>\n\n        </div>\n    )\n}\n\nexport default SpotifyPlaying","import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client'\nimport SpotifyPlaying from './Spotify-playing'\n\nconst SERVER = 'http://localhost:5000/'\n\nconst socket = io(SERVER)\n\nconst Spotify = () => {\n    const [songInfo, setSongInfo] = useState({ noSong: true })\n\n    useEffect(() => {\n        socket.on(\"getPlayBackState\", (data) => {\n            setSongInfo(data)\n        })\n    }, [])\n\n    if (!songInfo.noSong) {\n        return (\n            <SpotifyPlaying\n                songInfo={songInfo}\n            />\n        )\n    }\n    else {\n        return (\n            <div>\n                <img\n                    src=\"./png/spotify.png\"\n                    alt=\"spotify\"\n                    width=\"150\"\n                    height=\"150\"\n                    className=\"top-buffer\"\n                >\n                </img>\n            </div>\n        )\n    }\n}\n\nexport default Spotify\n\n","const Messages = {\n    anyTime: [\n        \"I love you\",\n        \"Hey there sexy\",\n        \"Hello Paige\",\n        \"You look beautiful\",\n        \"You're a boob\",\n        \"What a sweetheart\",\n        \"Sweetheart\",\n        \"You're a cutie\",\n        \"Are you from tennesse? Because you're the only 10 I see\",\n        \"My princess\",\n        \"I hope you're having a good day\",\n        \"Hello\",\n        \"Hey there\",\n        \"If you were a chicken you'd be impeccable\",\n        \"Did you just come out of the oven? Because you're hot\",\n        \"You're so sweet, you're giving me a toothache\",\n        \"Is it hot in here? Or is it just you\",\n        \"Did you have lucky charms for breakfast? Because you look magically delicious\",\n        \"Nice legs\",\n        \"Hey there beautiful\",\n    ],\n    morning: [\n        \"Good morning\",\n        \"I hope you slept well\",\n        \"How was your sleep?\",\n        \"Enjoy your day\",\n        \"Good morning sunshine\"\n    ],\n    evening: [\n        \"Goodnight\",\n        \"Sleep well\",\n        \"Sweet dreams\"\n    ],\n    holidays: {\n        \"01-01\": \"Happy New Years 🎉🎉🎉\",\n        \"02-14\": \"Happy Valentines day ❤️❤️❤️ \",\n        \"07-24\": \"Happy Aniversary 😘😘😘\",\n        \"07-29\": \"Happy Birthday 🎂🎂🎂\",\n        \"10-31\": \"Happy Halloween 🎃🎃🎃\",\n        \"11-24\": \"Merry Christmas Eve 🎄🎄🎄\",\n        \"11-25\": \"Merry Christmas 🎅🎅🎅\",\n        \"11-31\": \"Happy New Years Eve 🍾🍾🍾\",\n    }\n\n\n}\n\nexport default Messages","import React, { useState, useEffect } from 'react';\nimport moment from 'moment'\nimport messages from '../jsons/messages'\nimport helper from '../config'\n\nconst defaults = {\n    morningStart: 5,\n    morningEnd: 12,\n    nightStart: 22,\n    nightEnd: 5\n}\n\nconst currentSet = () => {\n    const hour = moment().hour()\n\n    if (hour >= defaults.morningStart && hour < defaults.morningEnd) {\n        return messages.morning\n    }\n    else if (hour >= defaults.nightStart || (hour >= 0 && hour < defaults.nightEnd)) {\n        return messages.evening\n    }\n    else {\n        return messages.anyTime\n    }\n}\n\nconst getHoliday = () => {\n    const date = moment().format('MM-DD').toString()\n\n    if (messages.holidays.hasOwnProperty(date)) {\n        return messages.holidays[date]\n    }\n    return null\n}\n\nconst getRandomMessage = (messages) => {\n    const length = messages.length - 1\n    let randomMessage = Math.floor(Math.random() * length)\n\n\n    return messages[randomMessage]\n}\nconst Message = () => {\n    const [currentMessage, setCurrentMessage] = useState(\"Hello Paige\")\n\n    useEffect(() => {\n        const changeMessage = () => {\n            if (getHoliday() !== null) {\n                setCurrentMessage(getHoliday())\n            }\n            else {\n                const set = currentSet()\n                setCurrentMessage(getRandomMessage(set))\n            }\n\n            let time = helper.closestRefresh(defaults.morningStart\n                , defaults.morningEnd\n                , defaults.nightStart\n            )\n            setTimeout(changeMessage, time)\n        }\n        setTimeout(() => {\n            changeMessage()\n        }, 5000);\n    }, [])\n\n    return (\n        <div className=\"\">\n            {currentMessage}\n        </div>\n    )\n}\n\nexport default Message","import React from 'react';\nimport './App.css';\nimport Clock from './components/Clock'\nimport Date from './components/Date'\nimport Dog from './components/Dogs'\nimport CurrentWeather from './components/CurrentWeather'\nimport Spotify from './components/Spotify'\nimport Message from './components/Message'\n\nimport { Row, Col, Container } from \"react-bootstrap\"\n\nfunction App() {\n  return (\n    <div >\n      <Container fluid={true}>\n\n        <Row className=\"\" >\n          <Col md={6} className=\"\" >\n            <Date className=\"Date\" />\n            <Clock className=\"Clock\" />\n          </Col>\n          <Col md={{ span: 4, offset: 2 }} className=\"text-right\">\n            <CurrentWeather />\n          </Col>\n        </Row>\n\n        <Row className=\"second-bottom message-size\">\n          <Col md={{ span: 11, offset: 0 }} className=\"text-center\">\n            <Message />\n          </Col>\n        </Row>\n\n        <Row className=\"bottom \" >\n          <Col md={6} className=\"spotify mt-auto\" >\n            <Spotify />\n          </Col>\n          <Col md={{ span: 3, offset: 3 }} className=\"\" >\n            <Dog />\n          </Col>\n        </Row>\n      </Container>\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}